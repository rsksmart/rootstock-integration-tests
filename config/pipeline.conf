const path = require('path');
const version = 'SNAPSHOT-5.4.0.0';
const nodesConfigPath = 'config/node-configs/';
const keysPathResolve = 'node-keys/';
const keysPath = 'config/node-keys/';
const classpath = '../build/libs/federate-node-' + version + '-all.jar';
const hsmV1ServerPath = '../hsm/fedhm-mockup.py';
const hsmV2ServerPath = '../hsm/v2/sim/0.1.3/sim';

module.exports = {
  init: {
    mineInitialBitcoin: true,
  },
  btc: { // Bitcoind configuration
    rpcUser: 'testuser',
    rpcPassword: 'testpassword'
  },
  federate: [
    { // Federate node configuration, can be an array to start multiple federate nodes
        removeDataOnDirOnStop: false,
        classpath: classpath,
        configFile: nodesConfigPath + 'rsk-reg-1.conf',
        publicKeys: {
          btc: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124',
          rsk: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124',
          mst: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124',
        },
        customConfig: {
          'federator.signers.BTC.type': 'keyFile',
          'federator.signers.BTC.path': path.resolve(__dirname, `${keysPathResolve}reg1.key`),
          'federator.signers.RSK.type': 'keyFile',
          'federator.signers.RSK.path': path.resolve(__dirname, `${keysPathResolve}reg1.key`),
          'federator.signers.MST.type': 'keyFile',
          'federator.signers.MST.path': path.resolve(__dirname, `${keysPathResolve}reg1.key`)
        },
        nodeId: '62634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a1243bd206c2c7a218d6ff4c9a185e71f066bd354e5267875b7683fbc70a1d455e87'
    },
    { // Federate node configuration, can be an array to start multiple federate nodes
        removeDataOnDirOnStop: false,
        classpath: classpath,
        configFile: nodesConfigPath + 'rsk-reg-2.conf',
        hsmConfigs: {
          btc: {
            serverPath: hsmV1ServerPath,
            keyPath : keysPath + 'reg2.key',
          },
          rsk: {
            serverPath: hsmV1ServerPath,
            keyPath : keysPath + 'reg2.key',
          },
          mst: {
            serverPath: hsmV1ServerPath,
            keyPath : keysPath + 'reg2.key',
          },
        },
        nodeId: 'c5946b3fbae03a654237da863c9ed534e0878657175b132b8ca630f245df04dbb0bde4f3854613b16032fb214f9cc00f75363976ee078cc4409cdc543036ccfd',
        customConfig: {}
    },
    { // Federate node configuration, can be an array to start multiple federate nodes
       removeDataOnDirOnStop: false,
       classpath: classpath,
       configFile: nodesConfigPath + 'rsk-reg-3.conf',
       hsmConfigs: {
         btc: {
            serverPath: hsmV1ServerPath,
            keyPath : keysPath + 'reg3.key',
          },
          rsk: {
            serverPath: hsmV1ServerPath,
            keyPath : keysPath + 'reg3.key',
          },
          mst: {
            serverPath: hsmV1ServerPath,
            keyPath : keysPath + 'reg3.key',
          },
       },
       nodeId: 'cd53fc53a07f211641a677d250f6de99caf620e8e77071e811a28b3bcddf0be19e9da12b897b83765fbaebe717fab74fcb1b57c82f7978b8be3296239909e626',
       customConfig: {}
    }],
  additionalFederateNodes: [
    { // Federate node configuration, can be an array to start multiple federate nodes
       removeDataOnDirOnStop: false,
       classpath: classpath,
       configFile: nodesConfigPath + 'rsk-reg-4.conf',
       hsmConfigs: {
         btc: {
            version: '2',
            serverPath: hsmV2ServerPath,
            keyPath : keysPath + 'reg4-v2-key.json',
          },
          rsk: {
            version: '2',
            serverPath: hsmV2ServerPath,
            keyPath : keysPath + 'reg4-v2-key.json',
          },
          mst: {
            version: '2',
            serverPath: hsmV2ServerPath,
            keyPath : keysPath + 'reg4-v2-key.json',
          },
       },
       nodeId: '72634ab57dae9cb373a5d536e76a8c4f67468bbcfb063809bab643072d78a1243bd206c2c7a218d6ff4c9a185e71f066bd354e5267875b7683fbc70a1d455e84',
       customConfig: {}
    },
    {
      classpath: classpath,
      configFile: nodesConfigPath + 'rsk-reg-5.conf',
      hsmConfigs: {
          bookkeepingConfigurations: {
              difficultyTarget: 3,
              informerIntervalInMs: 2000,
              blockHeadersToSend: 100,
              maxChunkSizeToHsm: 100,
          },
          btc: {
              version: '4',
              useDocker: true,
              useLogger: true,
              serverPath: hsmV4ServerPath,
              keyPath: keysPath + 'reg5-v2-key.json',
              keyId: "m/44'/1'/0'/0/0",
          },
          rsk: {
              useDocker: true,
              useLogger: true,
              version: '4',
              serverPath: hsmV4ServerPath,
              keyPath : keysPath + 'reg5-v2-key.json',
              keyId: "m/44'/1'/1'/0/0",
          },
          mst: {
              useDocker: true,
              useLogger: true,
              version: '4',
              serverPath: hsmV4ServerPath,
              keyPath : keysPath + 'reg5-v2-key.json',
              keyId: "m/44'/1'/2'/0/0",
          },
      },
      nodeId: '82634ab57dae9cb373a5d536e76a8c4f67468bbcfb063809bab643072d78a1243bd206c2c7a218d6ff4c9a185e71f066bd354e5267875b7683fbc70a1d455e85',
      customConfig: {}
    }
  ]
}
